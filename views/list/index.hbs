<div class="container">
  <h1 class="header">Welcome to SpeedAisle</h1>
  <p>
    The best way to keep track of your shopping list! Simply add items to your shopping list below,
    and check them off when you've put them in your trolley. You can even select your local grocery
    store to make sure your list is sorted in the most efficient way possible, for a speedy grocery
    shopping experience.
  </p>
  <section class="row">
    <div class='list-header col-md-7'>
      <div class='row'>
        <div class='col'>
        <h2 class="header">Your Shopping List </h2>
        </div>
        <div class='col' style='text-align:right; padding-top:10px;'>
          <a href="/list/categoriesorder">Re-order categories</a>
        </div>
        
        <form class="add-item-form" action="/list/additem" method="post">
          <div class='row add-item'>
            <div class='col-md-12'>
              <input
                class="item-input"
                id="new-item"
                name="item"
                type="text"
                placeholder="Add your item here..."
                required
              />
            </div>
          </div>
          <div class='row add-item'>
            <div class='col-lg-8'>
              <select class="select-dropdown" id="category" name="category">
                <option value="0">Fruits &amp; Vegs</option>
                <option value="1">Bakery</option>
                <option value="2">Fridge</option>
                <option value="3">Frozen</option>
                <option value="4">Food Cupboard</option>
                <option value="5">Household</option>
              </select>
            </div>
            <div class='col-lg-4 d-flex add-btn'>
              <input class="add-item-btn" type="submit" value="Add Item" />
            </div>
          </div>
        </form>
      </div>
      <hr>
      <div class='row list-content'>
        {{#if hasItems }}
          {{#each categorised}}
            {{#if this.items.length }}
            <h3>{{this.header}}</h3>
            <ul class="list">
              {{#each this.items}}
                <div class='checkbox {{this.id}}'>
                  <input type="checkbox" id={{this.id}} onclick="addCheck({{this.id}})" {{#if checked}} checked='checked'{{/if}}/>
                  <label for={{this.id}} class="strikethrough">{{this.name}}</label>
                  <span style='float: right;'>
                    <img class="trash-can" id="remove-{{this.id}}" src="images/trash-can.png" onclick="deleteItem({{this.id}})">
                  </span>
                </div>
              {{/each}}
            </ul>
            {{/if}}
          {{/each}}
          <form class="test-remove-all-form" action="/list/clean" method="get">
            <input class="test-remove-all-btn" type="submit" value="delete all" />
          </form>
        {{else}}
          <h3 class='message'>
            Your list is empty!
          </h3>
        {{/if}}
      </div>
    </div>
    
    <div class='col-md-5 map-content'>
      <div class='row'>
      <div class='col'>
        <h2>Your local store</h2>
      </div>
      <div class='col' style='text-align:right; padding-top:10px;'>
        <a href="/location">Change your local store</a>
      </div>
      </div>
      <p><b>{{store.name}}</b></p>
      <p><i>{{store.address}}</i></p>
      <div id="map" class="map"></div>
      <div id="popup" class="ol-popup">
        <a href="#" id="popup-closer" class="ol-popup-closer"></a>
        <div id="popup-content"></div>
      </div>
      <script type="text/javascript">
        var map = new ol.Map({
          target: 'map',
          layers: [
            new ol.layer.Tile({
              source: new ol.source.OSM()
            })
          ],
          view: new ol.View({
            center: ol.proj.fromLonLat([{{store.longitude}}, {{store.latitude}}]),
            zoom: 16
          })
        });

        var layer = new ol.layer.Vector({
            source: new ol.source.Vector({
                features: [
                    new ol.Feature({
                        geometry: new ol.geom.Point(ol.proj.fromLonLat([{{store.longitude}}, {{store.latitude}}]))
                    })
                ]
            })
        });
        map.addLayer(layer);
      </script>
    </div>
  </section>
</div>
<script src="javascripts/interface.js"></script>